# ASP.NET Core (.NET Framework)

# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: Build
    displayName: Build stage
    
    jobs:
      - job: Build
        displayName: Build Job

        pool:
          vmImage: 'windows-latest'

        steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

        - task: VSTest@2
          inputs:
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

      - job: Dockerize
        dependsOn: Build
        steps:

          - powershell: |
              Write-Host "Current directory: "
              pwd
              Write-Host "Artifact staging directory: " $(build.artifactStagingDirectory)\
              ls ./
              ls $(build.artifactStagingDirectory)
          - task: DotNetCoreCLI@2
            displayName: Publish WebApp
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '-c Release'

          - task: Docker@2
            displayName: Build pawel_gromala_service1
            inputs:
              command: 'build'
              Dockerfile: 'src/Pawel.Gromala.Service1/Dockerfile.dockerfile'
              buildContext: 'src/Pawel.Gromala.Service1/'
              tags: '$(Build.BuildId)'
          
          - powershell: |
              docker images
            
          # - task: Docker@2
          #   displayName: Push pawel_gromala_service1 to DockerHub
          #   inputs:
          #     containerRegistry: 'pawelgromala_docker_hub'
          #     repository: 'pawelgromala/allegro_pay'
          #     command: 'push'
          #     tags: 'pawelgromala'

          # - task: Docker@2
          #   displayName: Build pawel_gromala_service2 
          #   inputs:
          #     command: 'build'
          #     Dockerfile: 'src/Pawel.Gromala.Service2/Dockerfile.dockerfile'
          #     buildContext: 'src/Pawel.Gromala.Service2/'
          #     tags: 'allegro_pay/pawel_gromala_service2_$(Build.BuildId)'
            
          # - task: Docker@2
          #   displayName: Push pawel_gromala_service2 to DockerHub
          #   inputs:
          #     containerRegistry: 'pawelgromala_docker_hub'
          #     repository: 'pawelgromala/allegro_pay'
          #     command: 'push'
          #     tags: 'allegro_pay/pawel_gromala_service2_$(Build.BuildId)'

          # - task: Docker@2
          #   displayName: Build pawel_gromala_service3 
          #   inputs:
          #     command: 'build'
          #     Dockerfile: 'src/Pawel.Gromala.Service3/Dockerfile.dockerfile'
          #     buildContext: 'src/Pawel.Gromala.Service3/'
          #     tags: 'allegro_pay/pawel_gromala_service3_$(Build.BuildId)'
            
          # - task: Docker@2
          #   displayName: Push pawel_gromala_service3 to DockerHub
          #   inputs:
          #     containerRegistry: 'pawelgromala_docker_hub'
          #     repository: 'pawelgromala/allegro_pay'
          #     command: 'push'
          #     tags: 'allegro_pay/pawel_gromala_service3_$(Build.BuildId)'


          # - task: Docker@2
          #   displayName: Dockerize and push Pawel.Gromala.Service1 to docker hub
          #   inputs:
          #     containerRegistry: 'pawelgromala_docker_hub'
          #     repository: 'pawelgromala/allegro_pay'
          #     command: 'buildAndPush'
          #     Dockerfile: 'src/Pawel.Gromala.Service1/Dockerfile.dockerfile'
          #     arguments: '-t pawel.gromala.service1:$(Build.BuildId)'

          # - task: Docker@2
          #   displayName: Dockerize and push Pawel.Gromala.Service2 to docker hub
          #   inputs:
          #     containerRegistry: 'pawelgromala_docker_hub'
          #     repository: 'pawelgromala/allegro_pay'
          #     command: 'buildAndPush'
          #     Dockerfile: 'src/Pawel.Gromala.Service2/Dockerfile.dockerfile'
          #     arguments: '-t pawel.gromala.service2:$(Build.BuildId)'
          
          # - task: Docker@2
          #   displayName: Dockerize and push Pawel.Gromala.Service3 to docker hub
          #   inputs:
          #     containerRegistry: 'pawelgromala_docker_hub'
          #     repository: 'pawelgromala/allegro_pay'
          #     command: 'buildAndPush'
          #     Dockerfile: 'src/Pawel.Gromala.Service3/Dockerfile.dockerfile'
          #     arguments: '-t pawel.gromala.service3:$(Build.BuildId)'